---
import Layout from '../../layouts/Layout.astro';
---

<Layout title="Admin Dashboard" description="Panel de administración para gestionar contenido">
  <!-- Navigation -->
  <nav class="bg-white/90 dark:bg-gray-900/90 backdrop-blur-xl border-b border-gray-200 dark:border-gray-700 sticky top-0 z-40">
    <div class="max-w-7xl mx-auto px-6 py-4">
      <div class="flex justify-between items-center">
        <div class="flex items-center space-x-3">
          <div class="w-8 h-8 rounded-lg bg-gradient-to-r from-blue-500 to-purple-600 flex items-center justify-center">
            <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10"></path>
            </svg>
          </div>
          <h1 class="text-xl font-bold text-gray-900 dark:text-white">
            Admin Panel
          </h1>
        </div>
        
        <div class="flex items-center space-x-4">
          <a 
            href="/" 
            class="text-gray-600 dark:text-gray-400 hover:text-blue-600 dark:hover:text-blue-400 transition-colors duration-300 text-sm"
          >
            Ver sitio
          </a>
          <button 
            onclick="logout()" 
            class="bg-red-500 hover:bg-red-600 text-white px-4 py-2 rounded-lg transition-colors duration-300 text-sm font-medium"
          >
            Cerrar Sesión
          </button>
        </div>
      </div>
    </div>
  </nav>

  <main class="min-h-screen bg-gradient-to-br from-blue-50 via-white to-purple-50 dark:from-gray-900 dark:via-gray-900 dark:to-purple-900">
    <!-- Background Animation -->
    <div class="absolute inset-0 overflow-hidden pointer-events-none">
      <div class="absolute -top-40 -left-40 w-80 h-80 bg-blue-300 dark:bg-blue-600 rounded-full mix-blend-multiply dark:mix-blend-normal filter blur-xl opacity-30 animate-blob"></div>
      <div class="absolute -top-40 -right-40 w-80 h-80 bg-purple-300 dark:bg-purple-600 rounded-full mix-blend-multiply dark:mix-blend-normal filter blur-xl opacity-30 animate-blob animation-delay-2000"></div>
      <div class="absolute -bottom-40 left-20 w-80 h-80 bg-pink-300 dark:bg-pink-600 rounded-full mix-blend-multiply dark:mix-blend-normal filter blur-xl opacity-30 animate-blob animation-delay-4000"></div>
    </div>

    <div class="max-w-7xl mx-auto px-6 py-8 relative z-10">
      <!-- Welcome Section -->
      <div class="text-center mb-12">
        <h2 class="text-4xl font-bold mb-4 bg-gradient-to-r from-blue-600 via-purple-600 to-blue-800 dark:from-blue-400 dark:via-purple-400 dark:to-blue-300 bg-clip-text text-transparent">
          Generador de Contenido
        </h2>
        <p class="text-gray-600 dark:text-gray-400 text-lg max-w-2xl mx-auto">
          Crea nuevos posts del blog y proyectos con archivos Markdown listos para tu sitio
        </p>
      </div>

      <!-- Info Card -->
      <div class="bg-blue-500/10 dark:bg-blue-600/20 border border-blue-500/20 dark:border-blue-600/30 rounded-2xl p-6 mb-8 backdrop-blur-sm">
        <div class="flex items-start space-x-3">
          <div class="flex-shrink-0">
            <svg class="w-6 h-6 text-blue-600 dark:text-blue-400 mt-0.5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
            </svg>
          </div>
          <div>
            <h3 class="font-semibold text-blue-900 dark:text-blue-100 mb-1">
              ℹ️ Información Importante
            </h3>
            <p class="text-blue-800 dark:text-blue-200 text-sm leading-relaxed">
              Este panel genera archivos Markdown que debes guardar manualmente en tu proyecto. 
              Perfecto para GitHub Pages y hosting estático.
            </p>
          </div>
        </div>
      </div>

      <!-- Dashboard Cards -->
      <div class="grid grid-cols-1 md:grid-cols-2 gap-8 mb-12">
        <!-- Create Blog Post Card -->
        <div class="group">
          <div class="bg-white/80 dark:bg-gray-800/80 backdrop-blur-xl rounded-2xl p-8 shadow-xl border border-white/20 dark:border-gray-700/20 hover:shadow-2xl transition-all duration-300 transform hover:scale-105">
            <div class="flex items-center space-x-4 mb-6">
              <div class="w-12 h-12 bg-gradient-to-r from-blue-500 to-cyan-500 rounded-xl flex items-center justify-center">
                <svg class="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15.232 5.232l3.536 3.536m-2.036-5.036a2.5 2.5 0 113.536 3.536L6.5 21.036H3v-3.572L16.732 3.732z"></path>
                </svg>
              </div>
              <h3 class="text-xl font-bold text-gray-900 dark:text-white">
                Crear Post del Blog
              </h3>
            </div>
            <p class="text-gray-600 dark:text-gray-400 mb-6 leading-relaxed">
              Genera archivos Markdown para nuevos artículos del blog con metadatos y contenido estructurado
            </p>
            <button 
              id="createPostBtn"
              class="w-full bg-gradient-to-r from-blue-500 to-cyan-500 hover:from-blue-600 hover:to-cyan-600 text-white px-6 py-3 rounded-xl font-semibold transition-all duration-300 transform hover:scale-105"
            >
              Crear Post
            </button>
          </div>
        </div>

        <!-- Create Project Card -->
        <div class="group">
          <div class="bg-white/80 dark:bg-gray-800/80 backdrop-blur-xl rounded-2xl p-8 shadow-xl border border-white/20 dark:border-gray-700/20 hover:shadow-2xl transition-all duration-300 transform hover:scale-105">
            <div class="flex items-center space-x-4 mb-6">
              <div class="w-12 h-12 bg-gradient-to-r from-green-500 to-emerald-500 rounded-xl flex items-center justify-center">
                <svg class="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10"></path>
                </svg>
              </div>
              <h3 class="text-xl font-bold text-gray-900 dark:text-white">
                Crear Proyecto
              </h3>
            </div>
            <p class="text-gray-600 dark:text-gray-400 mb-6 leading-relaxed">
              Genera archivos Markdown para nuevos proyectos con enlaces, tags y descripción detallada
            </p>
            <button 
              id="createProjectBtn"
              class="w-full bg-gradient-to-r from-green-500 to-emerald-500 hover:from-green-600 hover:to-emerald-600 text-white px-6 py-3 rounded-xl font-semibold transition-all duration-300 transform hover:scale-105"
            >
              Crear Proyecto
            </button>
          </div>
        </div>
      </div>

      <!-- Forms Container -->
      <div id="formsContainer" class="hidden">
        <!-- Blog Post Form -->
        <div id="blogForm" class="hidden">
          <div class="bg-white/80 dark:bg-gray-800/80 backdrop-blur-xl rounded-2xl p-8 shadow-xl border border-white/20 dark:border-gray-700/20 mb-8">
            <div class="flex items-center space-x-3 mb-6">
              <div class="w-10 h-10 bg-gradient-to-r from-blue-500 to-cyan-500 rounded-xl flex items-center justify-center">
                <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15.232 5.232l3.536 3.536m-2.036-5.036a2.5 2.5 0 113.536 3.536L6.5 21.036H3v-3.572L16.732 3.732z"></path>
                </svg>
              </div>
              <h3 class="text-2xl font-bold text-gray-900 dark:text-white">
                Crear Nuevo Post del Blog
              </h3>
            </div>
            
            <form id="createBlogForm" class="space-y-6">
              <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                <div>
                  <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
                    Título *
                  </label>
                  <input 
                    type="text" 
                    name="title" 
                    required 
                    class="w-full px-4 py-3 bg-white/50 dark:bg-gray-700/50 border border-gray-300 dark:border-gray-600 rounded-xl text-gray-900 dark:text-white placeholder-gray-500 dark:placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-300"
                    placeholder="Título del artículo"
                  >
                </div>
                <div>
                  <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
                    Tags (separados por comas)
                  </label>
                  <input 
                    type="text" 
                    name="tags" 
                    class="w-full px-4 py-3 bg-white/50 dark:bg-gray-700/50 border border-gray-300 dark:border-gray-600 rounded-xl text-gray-900 dark:text-white placeholder-gray-500 dark:placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-300"
                    placeholder="javascript, web, tutorial"
                  >
                </div>
              </div>
              
              <div>
                <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
                  Descripción *
                </label>
                <textarea 
                  name="description" 
                  required 
                  rows="3" 
                  class="w-full px-4 py-3 bg-white/50 dark:bg-gray-700/50 border border-gray-300 dark:border-gray-600 rounded-xl text-gray-900 dark:text-white placeholder-gray-500 dark:placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-300"
                  placeholder="Breve descripción del artículo"
                ></textarea>
              </div>
              
              <div>
                <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
                  URL de Imagen (opcional)
                </label>
                <input 
                  type="url" 
                  name="image" 
                  class="w-full px-4 py-3 bg-white/50 dark:bg-gray-700/50 border border-gray-300 dark:border-gray-600 rounded-xl text-gray-900 dark:text-white placeholder-gray-500 dark:placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-300"
                  placeholder="https://ejemplo.com/imagen.jpg"
                >
              </div>
              
              <div>
                <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
                  Contenido (Markdown) *
                </label>
                <textarea 
                  name="content" 
                  required 
                  rows="15" 
                  class="w-full px-4 py-3 bg-white/50 dark:bg-gray-700/50 border border-gray-300 dark:border-gray-600 rounded-xl text-gray-900 dark:text-white placeholder-gray-500 dark:placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-300 font-mono text-sm"
                  placeholder="# Tu contenido en Markdown aquí..."
                ></textarea>
              </div>
              
              <div class="flex gap-4">
                <button 
                  type="submit" 
                  class="bg-gradient-to-r from-blue-500 to-cyan-500 hover:from-blue-600 hover:to-cyan-600 text-white px-8 py-3 rounded-xl font-semibold transition-all duration-300 transform hover:scale-105"
                >
                  Generar Archivo
                </button>
                <button 
                  type="button" 
                  onclick="hideForms()" 
                  class="bg-gray-500 hover:bg-gray-600 text-white px-8 py-3 rounded-xl font-semibold transition-all duration-300"
                >
                  Cancelar
                </button>
              </div>
            </form>
          </div>
        </div>

        <!-- Project Form -->
        <div id="projectForm" class="hidden">
          <div class="bg-white/80 dark:bg-gray-800/80 backdrop-blur-xl rounded-2xl p-8 shadow-xl border border-white/20 dark:border-gray-700/20 mb-8">
            <div class="flex items-center space-x-3 mb-6">
              <div class="w-10 h-10 bg-gradient-to-r from-green-500 to-emerald-500 rounded-xl flex items-center justify-center">
                <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10"></path>
                </svg>
              </div>
              <h3 class="text-2xl font-bold text-gray-900 dark:text-white">
                Crear Nuevo Proyecto
              </h3>
            </div>
            
            <form id="createProjectForm" class="space-y-6">
              <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                <div>
                  <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
                    Título *
                  </label>
                  <input 
                    type="text" 
                    name="title" 
                    required 
                    class="w-full px-4 py-3 bg-white/50 dark:bg-gray-700/50 border border-gray-300 dark:border-gray-600 rounded-xl text-gray-900 dark:text-white placeholder-gray-500 dark:placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-transparent transition-all duration-300"
                    placeholder="Nombre del proyecto"
                  >
                </div>
                <div>
                  <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
                    Tags (separados por comas) *
                  </label>
                  <input 
                    type="text" 
                    name="tags" 
                    required 
                    class="w-full px-4 py-3 bg-white/50 dark:bg-gray-700/50 border border-gray-300 dark:border-gray-600 rounded-xl text-gray-900 dark:text-white placeholder-gray-500 dark:placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-transparent transition-all duration-300"
                    placeholder="React, TypeScript, API"
                  >
                </div>
              </div>
              
              <div>
                <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
                  Descripción *
                </label>
                <textarea 
                  name="description" 
                  required 
                  rows="3" 
                  class="w-full px-4 py-3 bg-white/50 dark:bg-gray-700/50 border border-gray-300 dark:border-gray-600 rounded-xl text-gray-900 dark:text-white placeholder-gray-500 dark:placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-transparent transition-all duration-300"
                  placeholder="Descripción breve del proyecto"
                ></textarea>
              </div>
              
              <div>
                <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
                  URL de Imagen *
                </label>
                <input 
                  type="url" 
                  name="image" 
                  required 
                  class="w-full px-4 py-3 bg-white/50 dark:bg-gray-700/50 border border-gray-300 dark:border-gray-600 rounded-xl text-gray-900 dark:text-white placeholder-gray-500 dark:placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-transparent transition-all duration-300"
                  placeholder="https://ejemplo.com/proyecto.jpg"
                >
              </div>
              
              <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                <div>
                  <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
                    GitHub URL (opcional)
                  </label>
                  <input 
                    type="url" 
                    name="github" 
                    class="w-full px-4 py-3 bg-white/50 dark:bg-gray-700/50 border border-gray-300 dark:border-gray-600 rounded-xl text-gray-900 dark:text-white placeholder-gray-500 dark:placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-transparent transition-all duration-300"
                    placeholder="https://github.com/usuario/proyecto"
                  >
                </div>
                <div>
                  <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
                    Demo URL (opcional)
                  </label>
                  <input 
                    type="url" 
                    name="demo" 
                    class="w-full px-4 py-3 bg-white/50 dark:bg-gray-700/50 border border-gray-300 dark:border-gray-600 rounded-xl text-gray-900 dark:text-white placeholder-gray-500 dark:placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-transparent transition-all duration-300"
                    placeholder="https://proyecto-demo.com"
                  >
                </div>
              </div>
              
              <div class="bg-gray-50 dark:bg-gray-700/30 rounded-xl p-4">
                <label class="flex items-center space-x-3 cursor-pointer">
                  <input 
                    type="checkbox" 
                    name="featured" 
                    class="w-5 h-5 text-green-600 bg-white dark:bg-gray-700 border-2 border-gray-300 dark:border-gray-600 rounded focus:ring-green-500 focus:ring-2"
                  >
                  <span class="text-gray-700 dark:text-gray-300 font-medium">
                    ⭐ Proyecto destacado
                  </span>
                </label>
              </div>
              
              <div>
                <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
                  Contenido/Descripción detallada (Markdown) *
                </label>
                <textarea 
                  name="content" 
                  required 
                  rows="10" 
                  class="w-full px-4 py-3 bg-white/50 dark:bg-gray-700/50 border border-gray-300 dark:border-gray-600 rounded-xl text-gray-900 dark:text-white placeholder-gray-500 dark:placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-transparent transition-all duration-300 font-mono text-sm"
                  placeholder="## Descripción del proyecto

Este proyecto incluye...

### Características
- Característica 1
- Característica 2

### Tecnologías utilizadas
- React
- TypeScript"
                ></textarea>
              </div>
              
              <div class="flex gap-4">
                <button 
                  type="submit" 
                  class="bg-gradient-to-r from-green-500 to-emerald-500 hover:from-green-600 hover:to-emerald-600 text-white px-8 py-3 rounded-xl font-semibold transition-all duration-300 transform hover:scale-105"
                >
                  Generar Archivo
                </button>
                <button 
                  type="button" 
                  onclick="hideForms()" 
                  class="bg-gray-500 hover:bg-gray-600 text-white px-8 py-3 rounded-xl font-semibold transition-all duration-300"
                >
                  Cancelar
                </button>
              </div>
            </form>
          </div>
        </div>
      </div>

        <!-- File Output -->
              <!-- File Output -->
      <div id="fileOutput" class="hidden">
        <div class="bg-white/80 dark:bg-gray-800/80 backdrop-blur-xl rounded-2xl p-8 shadow-xl border border-white/20 dark:border-gray-700/20">
          <div class="flex items-center justify-between mb-6">
            <div class="flex items-center space-x-3">
              <div class="w-10 h-10 bg-gradient-to-r from-purple-500 to-pink-500 rounded-xl flex items-center justify-center">
                <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
                </svg>
              </div>
              <div>
                <h3 class="text-2xl font-bold text-gray-900 dark:text-white">Archivo Generado</h3>
                <p class="text-sm text-gray-600 dark:text-gray-400">Copia y guarda este archivo en tu repositorio</p>
              </div>
            </div>
            <button 
              onclick="hideForms()" 
              class="text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200 transition-colors"
            >
              <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
              </svg>
            </button>
          </div>
          
          <div class="space-y-4">
            <div class="bg-gradient-to-r from-purple-50 to-pink-50 dark:from-purple-900/20 dark:to-pink-900/20 rounded-xl p-4 border border-purple-200 dark:border-purple-700">
              <div class="flex items-center space-x-2 mb-2">
                <svg class="w-5 h-5 text-purple-600 dark:text-purple-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2H5a2 2 0 00-2-2z"></path>
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 5a2 2 0 012-2h2a2 2 0 012 2v0M8 5a2 2 0 000 4h8a2 2 0 000-4M8 5v0"></path>
                </svg>
                <span class="font-medium text-purple-800 dark:text-purple-300">Nombre del archivo:</span>
              </div>
              <code id="filename" class="text-sm font-mono text-purple-700 dark:text-purple-200 bg-white/50 dark:bg-gray-800/50 px-3 py-1 rounded-lg"></code>
            </div>
            
            <div class="relative">
              <div class="flex items-center justify-between mb-3">
                <label class="block text-sm font-medium text-gray-700 dark:text-gray-300">
                  Contenido del archivo:
                </label>
                <button 
                  onclick="copyToClipboard()" 
                  class="bg-gradient-to-r from-green-500 to-emerald-500 hover:from-green-600 hover:to-emerald-600 text-white px-4 py-2 rounded-lg text-sm font-semibold transition-all duration-300 transform hover:scale-105 flex items-center space-x-2"
                >
                  <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z"></path>
                  </svg>
                  <span>Copiar</span>
                </button>
              </div>
              <textarea 
                id="fileContent" 
                readonly 
                rows="20" 
                class="w-full px-4 py-3 bg-gray-50 dark:bg-gray-900 border border-gray-300 dark:border-gray-600 rounded-xl text-gray-900 dark:text-gray-100 font-mono text-sm resize-none focus:outline-none focus:ring-2 focus:ring-purple-500 focus:border-transparent"
              ></textarea>
            </div>
            
            <div class="bg-blue-50 dark:bg-blue-900/20 rounded-xl p-4 border border-blue-200 dark:border-blue-700">
              <div class="flex items-start space-x-3">
                <svg class="w-5 h-5 text-blue-600 dark:text-blue-400 mt-0.5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                </svg>
                <div class="text-sm text-blue-800 dark:text-blue-200">
                  <p class="font-semibold mb-1">Instrucciones:</p>
                  <ol class="list-decimal list-inside space-y-1 text-blue-700 dark:text-blue-300">
                    <li>Copia el contenido del archivo usando el botón "Copiar"</li>
                    <li>Crea un nuevo archivo en la ruta especificada de tu repositorio</li>
                    <li>Pega el contenido y guarda el archivo</li>
                    <li>Haz commit y push de los cambios</li>
                  </ol>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>

    </main>
  </div>
</Layout>

<!-- Background Blobs (matching main site) -->
<div class="fixed inset-0 overflow-hidden pointer-events-none">
  <div class="absolute -top-40 -right-40 w-80 h-80 bg-gradient-to-r from-blue-400 to-purple-600 rounded-full mix-blend-multiply filter blur-xl opacity-20 animate-blob"></div>
  <div class="absolute -bottom-40 -left-40 w-80 h-80 bg-gradient-to-r from-green-400 to-blue-600 rounded-full mix-blend-multiply filter blur-xl opacity-20 animate-blob animation-delay-2000"></div>
  <div class="absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-80 h-80 bg-gradient-to-r from-purple-400 to-pink-600 rounded-full mix-blend-multiply filter blur-xl opacity-20 animate-blob animation-delay-4000"></div>
</div>
    </div>

    <script>
        let currentFileData = { name: '', content: '' };

        // Check authentication on page load
        document.addEventListener('DOMContentLoaded', () => {
            const token = localStorage.getItem('admin_token');
            if (!token || token !== 'authenticated') {
                window.location.href = '/admin';
            }

            // Add event listeners to buttons
            const createPostBtn = document.getElementById('createPostBtn');
            const createProjectBtn = document.getElementById('createProjectBtn');

            if (createPostBtn) {
                createPostBtn.addEventListener('click', showCreatePost);
            }

            if (createProjectBtn) {
                createProjectBtn.addEventListener('click', showCreateProject);
            }
        });

        function generateSlug(title: string): string {
            return title
                .toLowerCase()
                .replace(/[^a-z0-9 -]/g, '')
                .replace(/\s+/g, '-')
                .replace(/-+/g, '-')
                .trim();
        }

        function showCreatePost() {
            console.log('showCreatePost called');
            const formsContainer = document.getElementById('formsContainer');
            const blogForm = document.getElementById('blogForm');
            const projectForm = document.getElementById('projectForm');
            const fileOutput = document.getElementById('fileOutput');
            
            console.log('Elements found:', {
                formsContainer: !!formsContainer,
                blogForm: !!blogForm,
                projectForm: !!projectForm,
                fileOutput: !!fileOutput
            });
            
            if (formsContainer) {
                formsContainer.classList.remove('hidden');
                // Scroll to form
                setTimeout(() => {
                    formsContainer.scrollIntoView({ behavior: 'smooth' });
                }, 100);
            }
            if (blogForm) blogForm.classList.remove('hidden');
            if (projectForm) projectForm.classList.add('hidden');
            if (fileOutput) fileOutput.classList.add('hidden');
        }

        function showCreateProject() {
            console.log('showCreateProject called');
            const formsContainer = document.getElementById('formsContainer');
            const projectForm = document.getElementById('projectForm');
            const blogForm = document.getElementById('blogForm');
            const fileOutput = document.getElementById('fileOutput');
            
            console.log('Elements found:', {
                formsContainer: !!formsContainer,
                projectForm: !!projectForm,
                blogForm: !!blogForm,
                fileOutput: !!fileOutput
            });
            
            if (formsContainer) {
                formsContainer.classList.remove('hidden');
                // Scroll to form
                setTimeout(() => {
                    formsContainer.scrollIntoView({ behavior: 'smooth' });
                }, 100);
            }
            if (projectForm) projectForm.classList.remove('hidden');
            if (blogForm) blogForm.classList.add('hidden');
            if (fileOutput) fileOutput.classList.add('hidden');
        }

        function hideForms() {
            document.getElementById('formsContainer')?.classList.add('hidden');
            document.getElementById('fileOutput')?.classList.add('hidden');
        }

        function logout() {
            localStorage.removeItem('admin_token');
            window.location.href = '/admin';
        }

        function copyToClipboard() {
            const fileContentElement = document.getElementById('fileContent') as HTMLTextAreaElement;
            if (fileContentElement) {
                fileContentElement.select();
                document.execCommand('copy');
                
                // Show feedback
                const button = (event as Event)?.target as HTMLButtonElement;
                if (button) {
                    const originalText = button.textContent || '';
                    button.textContent = '¡Copiado!';
                    button.classList.add('bg-green-600');
                    
                    setTimeout(() => {
                        button.textContent = originalText;
                        button.classList.remove('bg-green-600');
                    }, 2000);
                }
            }
        }

        function downloadFile() {
            const blob = new Blob([currentFileData.content], { type: 'text/markdown' });
            const url = URL.createObjectURL(blob);
            const a = document.createElement('a');
            a.href = url;
            a.download = currentFileData.name;
            document.body.appendChild(a);
            a.click();
            document.body.removeChild(a);
            URL.revokeObjectURL(url);
        }

        // Handle blog post creation
        document.getElementById('createBlogForm')?.addEventListener('submit', (e: Event) => {
            e.preventDefault();
            const form = e.target as HTMLFormElement;
            if (!form) return;
            
            const formData = new FormData(form);
            
            const title = formData.get('title') as string || '';
            const description = formData.get('description') as string || '';
            const content = formData.get('content') as string || '';
            const tagsStr = formData.get('tags') as string || '';
            const image = formData.get('image') as string;
            
            const slug = generateSlug(title);
            const date = new Date().toISOString().split('T')[0];
            const tags = tagsStr ? tagsStr.split(',').map((tag: string) => tag.trim()).filter((tag: string) => tag) : [];

            let frontmatter = `---
title: "${title}"
description: "${description}"
pubDate: "${date}"
author: "Juan Teo"`;

            if (tags.length > 0) {
                frontmatter += `\ntags: [${tags.map((tag: string) => `"${tag}"`).join(', ')}]`;
            }

            if (image) {
                frontmatter += `\nimage: "${image}"`;
            }

            frontmatter += '\n---';

            const fileContent = `${frontmatter}\n\n${content}`;
            const filename = `${slug}.md`;
            
            currentFileData = { name: filename, content: fileContent };
            
            const filenameElement = document.getElementById('filename');
            const fileContentElement = document.getElementById('fileContent') as HTMLTextAreaElement;
            
            if (filenameElement) filenameElement.textContent = `src/content/blog/${filename}`;
            if (fileContentElement) fileContentElement.value = fileContent;
            
            document.getElementById('fileOutput')?.classList.remove('hidden');
            document.getElementById('blogForm')?.classList.add('hidden');
        });

        // Handle project creation
        document.getElementById('createProjectForm')?.addEventListener('submit', (e: Event) => {
            e.preventDefault();
            const form = e.target as HTMLFormElement;
            if (!form) return;
            
            const formData = new FormData(form);
            
            const title = formData.get('title') as string || '';
            const description = formData.get('description') as string || '';
            const content = formData.get('content') as string || '';
            const image = formData.get('image') as string || '';
            const tagsStr = formData.get('tags') as string || '';
            const github = formData.get('github') as string;
            const demo = formData.get('demo') as string;
            const featured = formData.get('featured') === 'on';
            
            const slug = generateSlug(title);
            const tags = tagsStr ? tagsStr.split(',').map((tag: string) => tag.trim()).filter((tag: string) => tag) : [];

            let frontmatter = `---
title: "${title}"
description: "${description}"
image: "${image}"
tags: [${tags.map((tag: string) => `"${tag}"`).join(', ')}]
featured: ${featured}
order: 0`;

            if (github) {
                frontmatter += `\ngithub: "${github}"`;
            }

            if (demo) {
                frontmatter += `\ndemo: "${demo}"`;
            }

            frontmatter += '\n---';

            const fileContent = `${frontmatter}\n\n${content}`;
            const filename = `${slug}.md`;
            
            currentFileData = { name: filename, content: fileContent };
            
            const filenameElement = document.getElementById('filename');
            const fileContentElement = document.getElementById('fileContent') as HTMLTextAreaElement;
            
            if (filenameElement) filenameElement.textContent = `src/content/projects/${filename}`;
            if (fileContentElement) fileContentElement.value = fileContent;
            
            document.getElementById('fileOutput')?.classList.remove('hidden');
            document.getElementById('projectForm')?.classList.add('hidden');
        });
    </script>
</body>
</html>
